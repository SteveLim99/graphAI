version: "3.7"

services:
  postgres:
    image: postgres:alpine
    container_name: postgres
    restart: always
    env_file:
      - ./env/database.env
    ports:
      - 5432:5432
    volumes:
      - ./db/pgdata:/var/lib/postgresql/data
      - ./db/schema_init.sql:/docker-entrypoint-initdb.d/1_init.sql
      - ./db/data_init.sql:/docker-entrypoint-initdb.d/2_data_init.sql
  db_api:
    image: 127.0.0.1:5002/db_api
    container_name: db_api
    build: ./db_api
    ports:
      - "127.0.0.1:5002:5002"
    volumes:
      - ./db_api:/code
      - ./data:/code/data
    environment:
      FLASK_ENV: production
    depends_on:
      - postgres
  api:
    image: 127.0.0.1:5000/api
    container_name: api
    build: ./api
    ports:
      - "127.0.0.1:5000:5000"
    volumes:
      - ./api:/code
      - ./data:/code/data
    environment:
      FLASK_ENV: production
    depends_on:
      - postgres
  gnn_api:
    image: 127.0.0.1:5001/gnn_api
    container_name: gnn_api
    build: ./gnn_api
    ports:
      - "127.0.0.1:5001:5001"
    volumes:
      - ./gnn_api:/code
      - ./data:/code/data
    environment:
      FLASK_ENV: production
    depends_on:
      - postgres
      - api
  frontend_prod:
    image: 127.0.0.1:3000/frontend_prod
    container_name: frontend_prod
    build:
      context: ./dashboard
      dockerfile: Dockerfile.prod
    ports:
      - "3000:80"
    depends_on:
      - postgres
      - api
      - gnn_api
      - db_api
